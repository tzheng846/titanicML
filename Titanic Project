{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":3136,"databundleVersionId":26502,"sourceType":"competition"}],"dockerImageVersionId":30684,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-04-17T05:40:59.429793Z","iopub.execute_input":"2024-04-17T05:40:59.430150Z","iopub.status.idle":"2024-04-17T05:41:00.493439Z","shell.execute_reply.started":"2024-04-17T05:40:59.430124Z","shell.execute_reply":"2024-04-17T05:41:00.492316Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"training_data = pd.read_csv(\"/kaggle/input/titanic/train.csv\")\ntest_data = pd.read_csv(\"/kaggle/input/titanic/test.csv\")","metadata":{"execution":{"iopub.status.busy":"2024-04-17T05:46:50.139469Z","iopub.execute_input":"2024-04-17T05:46:50.140656Z","iopub.status.idle":"2024-04-17T05:46:50.157184Z","shell.execute_reply.started":"2024-04-17T05:46:50.140608Z","shell.execute_reply":"2024-04-17T05:46:50.156016Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Data Exploration","metadata":{}},{"cell_type":"code","source":"training_data.info()","metadata":{"execution":{"iopub.status.busy":"2024-04-17T05:49:31.957672Z","iopub.execute_input":"2024-04-17T05:49:31.958097Z","iopub.status.idle":"2024-04-17T05:49:31.972817Z","shell.execute_reply.started":"2024-04-17T05:49:31.958066Z","shell.execute_reply":"2024-04-17T05:49:31.971424Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"There are numerical and categorial datatypes. So they are split into two different datasets.\\\nUses df.select_dtypes() function\\\ninterestingly \"number\" includes integers and floats","metadata":{}},{"cell_type":"code","source":"training_numerical = training_data.select_dtypes(include = \"number\")\ntraining_categorial = training_data.select_dtypes(include = \"object\")","metadata":{"execution":{"iopub.status.busy":"2024-04-17T06:09:30.565977Z","iopub.execute_input":"2024-04-17T06:09:30.566437Z","iopub.status.idle":"2024-04-17T06:09:30.573445Z","shell.execute_reply.started":"2024-04-17T06:09:30.566406Z","shell.execute_reply":"2024-04-17T06:09:30.572564Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"training_data.describe()","metadata":{"execution":{"iopub.status.busy":"2024-04-17T05:48:22.045476Z","iopub.execute_input":"2024-04-17T05:48:22.046235Z","iopub.status.idle":"2024-04-17T05:48:22.090484Z","shell.execute_reply.started":"2024-04-17T05:48:22.046194Z","shell.execute_reply":"2024-04-17T05:48:22.089252Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"for i in training_numerical.columns:\n    training_numerical[i].plot(kind = \"hist\")","metadata":{"execution":{"iopub.status.busy":"2024-04-17T06:29:07.215473Z","iopub.execute_input":"2024-04-17T06:29:07.215873Z","iopub.status.idle":"2024-04-17T06:29:07.664965Z","shell.execute_reply.started":"2024-04-17T06:29:07.215845Z","shell.execute_reply":"2024-04-17T06:29:07.663842Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"training_data[\"Age\"].plot(kind = \"hist\")","metadata":{"execution":{"iopub.status.busy":"2024-04-17T06:27:22.726930Z","iopub.execute_input":"2024-04-17T06:27:22.727364Z","iopub.status.idle":"2024-04-17T06:27:23.009901Z","shell.execute_reply.started":"2024-04-17T06:27:22.727328Z","shell.execute_reply":"2024-04-17T06:27:23.008589Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plot_df_colums(training_numerical)","metadata":{"execution":{"iopub.status.busy":"2024-04-17T06:27:23.073014Z","iopub.execute_input":"2024-04-17T06:27:23.073513Z","iopub.status.idle":"2024-04-17T06:27:23.460222Z","shell.execute_reply.started":"2024-04-17T06:27:23.073472Z","shell.execute_reply":"2024-04-17T06:27:23.459096Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}